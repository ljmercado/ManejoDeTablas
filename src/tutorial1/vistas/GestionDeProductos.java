/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tutorial1.vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tutorial1.entidades.Categoria;
import tutorial1.entidades.Producto;
import tutorial1.modelo.CategoriaData;
import tutorial1.modelo.ProductoData;

/**
 *
 * @author Luis
 */
public class GestionDeProductos extends javax.swing.JFrame {

    private CategoriaData cd;
    private ProductoData pd;
    private DefaultTableModel modelo;
    private Producto productoElegido;
    /**
     * Creates new form GestionDeProductos
     */
    public GestionDeProductos() {
        initComponents();
        modelo=new DefaultTableModel();
        cd=new CategoriaData();
        pd=new ProductoData();
        llenarCombos();
        desactivarCampos();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbCategorias = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProductos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jtfDescripcion = new javax.swing.JTextField();
        jtfPrecio = new javax.swing.JTextField();
        jcbCategoriaProducto = new javax.swing.JComboBox<>();
        jsStock = new javax.swing.JSpinner();
        jbNuevo = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbActualizar = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Gestión de Productos");

        jLabel2.setText("Categoria");

        jcbCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCategoriasActionPerformed(evt);
            }
        });

        jtProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtProductos);

        jLabel3.setText("Código");

        jLabel4.setText("Descripción");

        jLabel5.setText("Precio");

        jLabel6.setText("Categoria");

        jLabel7.setText("Stock");

        jtfCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoFocusLost(evt);
            }
        });

        jtfDescripcion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescripcionFocusLost(evt);
            }
        });

        jtfPrecio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfPrecioFocusLost(evt);
            }
        });

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbGuardar.setText("Guardar");
        jbGuardar.setEnabled(false);
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbActualizar.setText("Actualizar");
        jbActualizar.setEnabled(false);
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        jbBorrar.setText("Borrar");
        jbBorrar.setEnabled(false);
        jbBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(78, 78, 78))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(35, 35, 35)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jsStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jbGuardar)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jcbCategoriaProducto, javax.swing.GroupLayout.Alignment.LEADING, 0, 148, Short.MAX_VALUE)
                                                .addComponent(jtfPrecio, javax.swing.GroupLayout.Alignment.LEADING)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jbActualizar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jbBorrar))))
                            .addComponent(jbNuevo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalir)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jcbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcbCategoriaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jsStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNuevo)
                    .addComponent(jbGuardar)
                    .addComponent(jbActualizar)
                    .addComponent(jbBorrar)
                    .addComponent(jbSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
        
        activaCampos();
        jbGuardar.setEnabled(true);
        
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jtfCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoFocusLost
        // TODO add your handling code here:
        String val="[0-9]*";//Expresiones Regulares
        if(!jtfCodigo.getText().matches(val)){
        
            JOptionPane.showMessageDialog(this, "Debe ingresar sólo números");
            jtfCodigo.requestFocus();
        }
    }//GEN-LAST:event_jtfCodigoFocusLost

    private void jtfDescripcionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescripcionFocusLost
        // TODO add your handling code here:
         if(jtfDescripcion.getText().length()==0){
        
            JOptionPane.showMessageDialog(this, "La descripción no debe estar vacía");
            jtfDescripcion.requestFocus();
            
        }
        
    }//GEN-LAST:event_jtfDescripcionFocusLost

    private void jtfPrecioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPrecioFocusLost
        // TODO add your handling code here:
        try{
        String precio=jtfPrecio.getText();
        double prec=Double.parseDouble(precio);
        }catch(NumberFormatException nf){
        
            JOptionPane.showMessageDialog(this, "Debe ingresar un precio válido");
            jtfPrecio.requestFocus();
        }
        
    }//GEN-LAST:event_jtfPrecioFocusLost

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here:
          
        Producto pn=new Producto();
          
        pn.setCodigo(Integer.parseInt(jtfCodigo.getText()));
        pn.setDescripcion(jtfDescripcion.getText());
        pn.setPrecio(Double.parseDouble(jtfPrecio.getText()));
        pn.setCategoria((Categoria)jcbCategoriaProducto.getSelectedItem());
        pn.setStock((Integer)jsStock.getValue());
        
        pd.guardarProducto(pn);
        limpiarCampos();
        
         desactivarCampos();
       jbGuardar.setEnabled(false);
        
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jcbCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCategoriasActionPerformed
        // TODO add your handling code here:
        llenarTabla();
    }//GEN-LAST:event_jcbCategoriasActionPerformed

    private void jtProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtProductosMouseClicked
        // TODO add your handling code here:
        
         jbActualizar.setEnabled(true);
        jbBorrar.setEnabled(true);
        int filaElegida=jtProductos.getSelectedRow();
        
        if(filaElegida!=-1){
                int idProducto=(Integer)jtProductos.getValueAt(filaElegida, 0);
                int codigo=(Integer)jtProductos.getValueAt(filaElegida, 1);
                String descripcion=(String)jtProductos.getValueAt(filaElegida, 2);
                double precio=(Double)jtProductos.getValueAt(filaElegida,3);
                Categoria catTabla=(Categoria)jtProductos.getValueAt(filaElegida, 4);
                int stock=(Integer)jtProductos.getValueAt(filaElegida, 5);
                
                jtfCodigo.setText(codigo+"");
                jtfDescripcion.setText(descripcion);
                jtfPrecio.setText(precio+"");
                jcbCategoriaProducto.setSelectedItem(catTabla);
                jsStock.setValue(stock);
                
                activaCampos();
                productoElegido=new Producto();
                productoElegido.setIdProducto(idProducto);
                productoElegido.setCodigo(codigo);
                productoElegido.setDescripcion(descripcion);
                productoElegido.setPrecio(precio);
                productoElegido.setCategoria(catTabla);
                productoElegido.setStock(stock);
        }
    }//GEN-LAST:event_jtProductosMouseClicked

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        // TODO add your handling code here:
                int codigo=Integer.parseInt(jtfCodigo.getText());
                String descripcion=jtfDescripcion.getText();
                double precio=Double.parseDouble(jtfPrecio.getText());
                Categoria catNueva=(Categoria)jcbCategoriaProducto.getSelectedItem();
                int stock=(Integer)jsStock.getValue();
                
                
                productoElegido.setCodigo(codigo);
                productoElegido.setDescripcion(descripcion);
                productoElegido.setPrecio(precio);
                productoElegido.setStock(stock);
                productoElegido.setCategoria(catNueva);
                
                 pd.modificarProducto(productoElegido);
                 productoElegido=null;
                limpiarCampos();
                desactivarCampos();
                llenarTabla();
                jbActualizar.setEnabled(false);
        
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed
        // TODO add your handling code here:
         pd.borraProducto(productoElegido);
        desactivarCampos();
        llenarTabla();
        jbBorrar.setEnabled(false);
    }//GEN-LAST:event_jbBorrarActionPerformed

      private void limpiarCampos(){
    
        jtfCodigo.setText("");
        jtfDescripcion.setText("");
        jtfPrecio.setText("");
        jcbCategoriaProducto.setSelectedIndex(0);
        jsStock.setValue(0);
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionDeProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionDeProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionDeProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionDeProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionDeProductos().setVisible(true);
            }
        });
      
    }

    private void llenarCombos(){
       
        for(Categoria c:cd.obtenerCategorias()){
        
            jcbCategorias.addItem(c);
            jcbCategoriaProducto.addItem(c);
            
        }
    }
    
    private void activaCampos(){
        jtfCodigo.setEnabled(true);
        jtfDescripcion.setEnabled(true);
        jtfPrecio.setEnabled(true);
        jsStock.setEnabled(true);
       jcbCategoriaProducto.setEnabled(true);
       
    }
    
    private void desactivarCampos(){
    
         jtfCodigo.setEnabled(false);
        jtfDescripcion.setEnabled(false);
        jtfPrecio.setEnabled(false);
        jsStock.setEnabled(false);
       jcbCategoriaProducto.setEnabled(false);
    
    
    }
    
     private void armarCabecera(){
    
          ArrayList<Object> columnas=new ArrayList<Object>();
        columnas.add("ID");
        columnas.add("Codigo");
        columnas.add("Descripcion");
        columnas.add("Precio");
        columnas.add("Categoria");
        columnas.add("Stock");
        
        for(Object it:columnas){
        
            modelo.addColumn(it);
        }
        jtProductos.setModel(modelo);
    }
     
     private void llenarTabla(){
         
         borrarFilas();    
         Categoria elegida=(Categoria)jcbCategorias.getSelectedItem();
     
        
        if(elegida!=null){
        
            for(Producto p:pd.obtenerProductos()){
            
                if(p.getCategoria().equals(elegida)){
                
                    modelo.addRow(new Object[]{p.getIdProducto(),p.getCodigo(),p.getDescripcion(),p.getPrecio(),p.getCategoria(),p.getStock()});
                }
            }
        }
     }
     
     private void borrarFilas(){
     
         int a =modelo.getRowCount()-1;

                for(int i=a;i>=0;i--){
   
                    modelo.removeRow(i );
            }
     }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Categoria> jcbCategoriaProducto;
    private javax.swing.JComboBox<Categoria> jcbCategorias;
    private javax.swing.JSpinner jsStock;
    private javax.swing.JTable jtProductos;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfDescripcion;
    private javax.swing.JTextField jtfPrecio;
    // End of variables declaration//GEN-END:variables
}
